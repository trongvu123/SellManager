// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SellManager.Models;

#nullable disable

namespace SellManager.Migrations
{
    [DbContext(typeof(QlbanHangContext))]
    partial class QlbanHangContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SellManager.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    b.Property<int>("MaSp")
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("MaHd", "MaSp");

                    b.HasIndex("MaSp");

                    b.ToTable("ChiTietHoaDon");
                });

            modelBuilder.Entity("SellManager.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHd"));

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MaKH");

                    b.Property<int?>("MaNv")
                        .HasColumnType("int")
                        .HasColumnName("MaNV");

                    b.Property<DateTime>("NgayLapHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NgayLapHD")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("NgayNhanHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1)/(1))/(1900))");

                    b.HasKey("MaHd")
                        .HasName("PK_Orders");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaNv");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("SellManager.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MaKH");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DienThoai")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<int>("MaThanhPho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("TenCty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKh")
                        .HasName("PK_Customers");

                    b.HasIndex("MaThanhPho");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("SellManager.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNv"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DienThoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Hinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaDn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MaDN");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("NgayNv")
                        .HasColumnType("date")
                        .HasColumnName("NgayNV");

                    b.Property<bool?>("Nu")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("MaNv");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("SellManager.Models.SanPham", b =>
                {
                    b.Property<int>("MaSp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaSP");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSp"));

                    b.Property<double?>("DonGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Hinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("TenSP");

                    b.HasKey("MaSp")
                        .HasName("PK_Products");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("SellManager.Models.ThanhPho", b =>
                {
                    b.Property<int>("MaThanhPho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThanhPho"));

                    b.Property<string>("TenThanhPho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaThanhPho");

                    b.ToTable("ThanhPho");
                });

            modelBuilder.Entity("SellManager.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("SellManager.Models.HoaDon", "MaHdNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetails_Orders");

                    b.HasOne("SellManager.Models.SanPham", "MaSpNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaSp")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetails_Products");

                    b.Navigation("MaHdNavigation");

                    b.Navigation("MaSpNavigation");
                });

            modelBuilder.Entity("SellManager.Models.HoaDon", b =>
                {
                    b.HasOne("SellManager.Models.KhachHang", "MaKhNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Customers");

                    b.HasOne("SellManager.Models.NhanVien", "MaNvNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaNv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_HoaDon_NhanVien");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("SellManager.Models.KhachHang", b =>
                {
                    b.HasOne("SellManager.Models.ThanhPho", "MaThanhPhoNavigation")
                        .WithMany("KhachHangs")
                        .HasForeignKey("MaThanhPho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KhachHang_ThanhPho");

                    b.Navigation("MaThanhPhoNavigation");
                });

            modelBuilder.Entity("SellManager.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("SellManager.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("SellManager.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("SellManager.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("SellManager.Models.ThanhPho", b =>
                {
                    b.Navigation("KhachHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
